#! /bin/bash

# add a user to run commands with
if [ -f /root/.docker-runrc ]; then
  #uid:username:groups:password
  USER_NAME=`cut -d : -f 2   /root/.docker-runrc`
  USER_PASS=`cut -d : -f 4-  /root/.docker-runrc`
  USER_GROUPS=`cut -d : -f 3 /root/.docker-runrc`
  USER_ID=`cut -d : -f 1     /root/.docker-runrc`
else
  #echo "WARNING: .docker-runrc not found; user password is well known and sudo will not be available"
  USER_NAME=docker
  USER_PASS=`perl -e 'print crypt(docker,"\\$6\\$saltsalt\\$") . "\n"'`
  USER_GROUPS=audio #no sudo if password is well known
  USER_ID=1000
fi

# create the groups
echo $USER_GROUPS | tr ',' ' ' | xargs -n1  groupadd -f
# create that user
userdel -r ubuntu > /dev/null 2>&1 # may conflict with provided user id
useradd -m $USER_NAME -u $USER_ID -G $USER_GROUPS -N > /dev/null 2>&1
#chpasswd <<< "$USER_NAME:$USER_PASS"
awk "{gsub(/${USER_NAME}:.:/,\"${USER_NAME}:${USER_PASS}:\")}1" /etc/shadow > temp.file && cat temp.file > /etc/shadow && rm temp.file
chown $USER_NAME /home/$USER_NAME
#touch /home/$USER_NAME/.Xauthority; chown $USER_NAME /home/$USER_NAME/.Xauthority # gksu needs this file, even if empty
chsh -s /bin/bash $USER_NAME
cd /home/$USER_NAME

# run command as user
if [ $# -eq 0 ]; then
  USER=$USER_NAME LOGNAME=$USER_NAME exec gosu $USER_NAME bash
else
  USER=$USER_NAME LOGNAME=$USER_NAME exec gosu $USER_NAME "$@"
fi
